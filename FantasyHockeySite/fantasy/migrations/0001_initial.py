# Generated by Django 2.1.7 on 2019-03-27 01:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FantasyLeague',
            fields=[
                ('fantasy_league_name', models.CharField(db_column='Fantasy_League_Name', max_length=45, primary_key=True, serialize=False)),
                ('goals_weight', models.DecimalField(db_column='Goals_Weight', decimal_places=1, default=3, max_digits=10)),
                ('assists_weight', models.DecimalField(db_column='Assists_Weight', decimal_places=1, default=2, max_digits=10)),
                ('powerplay_goals_weight', models.DecimalField(db_column='Powerplay_Goals_Weight', decimal_places=1, default=1, max_digits=10)),
                ('shorthanded_goals_weight', models.DecimalField(db_column='Shorthanded_Goals_Weight', decimal_places=1, default=2, max_digits=10)),
                ('shorthanded_assists_weight', models.DecimalField(db_column='Shorthanded_Assists_Weight', decimal_places=1, default=1, max_digits=10)),
                ('plus_minus', models.DecimalField(db_column='+/-_Weight', decimal_places=1, default=1, max_digits=10)),
                ('penalty_minutes_weight', models.DecimalField(db_column='Penalty_Minutes_Weight', decimal_places=1, default=0.5, max_digits=10)),
                ('game_winning_goals_weight', models.DecimalField(db_column='Game_Winning_Goals_Weight', decimal_places=1, default=1, max_digits=10)),
                ('shots_on_goal_weight', models.DecimalField(db_column='Shots_on_Goal_Weight', decimal_places=1, default=0.4, max_digits=10)),
                ('wins_weight', models.DecimalField(db_column='Wins_Weight', decimal_places=1, default=4, max_digits=10)),
                ('losses_weight', models.DecimalField(db_column='Losses_Weight', decimal_places=1, default=-2, max_digits=10)),
                ('overtime_losses_weight', models.DecimalField(db_column='Overtime_Losses_Weight', decimal_places=1, default=-2, max_digits=10)),
                ('saves_weight', models.DecimalField(db_column='Saves_Weight', decimal_places=1, default=0.2, max_digits=10)),
                ('goals_against_weight', models.DecimalField(db_column='Goals_Against_Weight', decimal_places=1, default=-1, max_digits=10)),
                ('saves_percentage_weight', models.DecimalField(db_column='Saves_Percentage_Weight', decimal_places=1, default=0, max_digits=10)),
                ('goals_against_average_weight', models.DecimalField(db_column='Goals_Against_Average_Weight', decimal_places=1, default=0, max_digits=10)),
                ('shutouts_weight', models.DecimalField(db_column='Shutouts_Weight', decimal_places=1, default=2, max_digits=10)),
                ('maximum_number_of_players', models.IntegerField(db_column='Maximum_Number_of_Players', default=20)),
                ('minimum_number_of_goalies', models.IntegerField(db_column='Minimum_Number_of_Goalies', default=1)),
                ('minimum_number_of_defencemen', models.IntegerField(db_column='Minimum_Number_of_Defencemen', default=2)),
                ('minimum_number_of_right_wing', models.IntegerField(db_column='Minimum_Number_of_Right_Wing', default=1)),
                ('minimum_number_of_left_wing', models.IntegerField(db_column='Minimum_Number_of_Left_Wing', default=1)),
                ('minimum_number_of_center', models.IntegerField(db_column='Minimum_Number_of_Center', default=1)),
                ('fantasy_league_invite_code', models.CharField(db_column='Fantasy_League_Invite_Code', max_length=45)),
            ],
            options={
                'db_table': 'fantasy_league',
            },
        ),
        migrations.CreateModel(
            name='FantasyTeam',
            fields=[
                ('fantasy_team_name', models.CharField(db_column='Fantasy_Team_Name', max_length=45, primary_key=True, serialize=False)),
                ('fantasy_points', models.IntegerField(db_column='Fantasy_Points', default=0)),
            ],
            options={
                'db_table': 'fantasy_team',
            },
        ),
        migrations.CreateModel(
            name='NhlPlayers',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('jersey_number', models.IntegerField(db_column='Jersey_Number')),
                ('name', models.CharField(db_column='Name', max_length=45)),
                ('games_played', models.IntegerField(db_column='Games_Played', default=0)),
            ],
            options={
                'db_table': 'nhl_players',
            },
        ),
        migrations.CreateModel(
            name='NhlTeam',
            fields=[
                ('team_name', models.CharField(db_column='Team_Name', max_length=45, primary_key=True, serialize=False)),
                ('goals_for', models.IntegerField(db_column='Goals_For', default=0)),
                ('goals_against', models.IntegerField(db_column='Goals_Against', default=0)),
                ('wins', models.IntegerField(db_column='Wins', default=0)),
                ('losses', models.IntegerField(db_column='Losses', default=0)),
                ('overtime_losses', models.IntegerField(db_column='Overtime_Losses', default=0)),
            ],
            options={
                'db_table': 'nhl_team',
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('username', models.CharField(db_column='Username', max_length=45, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=45)),
                ('password', models.CharField(db_column='Password', max_length=45)),
            ],
            options={
                'db_table': 'owner',
            },
        ),
        migrations.CreateModel(
            name='GoalieTeams',
            fields=[
                ('fantasy_team_name', models.ForeignKey(db_column='Fantasy_Team_Name', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='Goalies_Fantasy_Team_Name', serialize=False, to='fantasy.FantasyTeam')),
            ],
            options={
                'db_table': 'goalie_teams',
            },
        ),
        migrations.CreateModel(
            name='LeagueCommisioner',
            fields=[
                ('username', models.ForeignKey(db_column='Username', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='fantasy.Owner')),
            ],
            options={
                'db_table': 'league_commisioner',
            },
        ),
        migrations.CreateModel(
            name='NhlGoalies',
            fields=[
                ('jersey_number', models.ForeignKey(db_column='Jersey_Number', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='NhlGoalies_Jersey_Number', serialize=False, to='fantasy.NhlPlayers')),
                ('wins', models.IntegerField(db_column='Wins', default=0)),
                ('losses', models.IntegerField(db_column='Losses', default=0)),
                ('overtime_losses', models.IntegerField(db_column='Overtime_Losses', default=0)),
                ('shots_against', models.IntegerField(db_column='Shots_Against', default=0)),
                ('saves', models.IntegerField(db_column='Saves', default=0)),
                ('shutouts', models.IntegerField(db_column='Shutouts', default=0)),
            ],
            options={
                'db_table': 'nhl_goalies',
            },
        ),
        migrations.CreateModel(
            name='NhlSkaters',
            fields=[
                ('jersey_number', models.ForeignKey(db_column='Jersey_Number', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='NhlSkaters_Jersey_Number', serialize=False, to='fantasy.NhlPlayers')),
                ('goals', models.IntegerField(db_column='Goals', default=0)),
                ('powerplay_goals', models.IntegerField(db_column='Powerplay_Goals', default=0)),
                ('powerplay_points', models.IntegerField(db_column='Powerplay_Points', default=0)),
                ('shorthanded_goals', models.IntegerField(db_column='Shorthanded_Goals', default=0)),
                ('shorthanded_points', models.IntegerField(db_column='Shorthanded_Points', default=0)),
                ('plus_minus', models.IntegerField(db_column='+/-', default=0)),
                ('penalty_minutes', models.IntegerField(db_column='Penalty_Minutes', default=0)),
                ('game_winning_goals', models.IntegerField(db_column='Game_Winning_Goals', default=0)),
                ('shots_on_goal', models.IntegerField(db_column='Shots_on_Goal', default=0)),
                ('center_flag', models.IntegerField(db_column='Center_Flag')),
                ('left_wing_flag', models.IntegerField(db_column='Left_Wing_Flag')),
                ('right_wing_flag', models.IntegerField(db_column='Right_Wing_Flag')),
                ('defencemen_flag', models.IntegerField(db_column='Defencemen_Flag')),
            ],
            options={
                'db_table': 'nhl_skaters',
            },
        ),
        migrations.CreateModel(
            name='Participates',
            fields=[
                ('username', models.ForeignKey(db_column='Username', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='fantasy.Owner')),
                ('fantasy_league_name', models.ForeignKey(db_column='Fantasy_League_Name', on_delete=django.db.models.deletion.CASCADE, to='fantasy.FantasyLeague')),
            ],
            options={
                'db_table': 'participates',
            },
        ),
        migrations.CreateModel(
            name='SkaterTeams',
            fields=[
                ('fantasy_team_name', models.ForeignKey(db_column='Fantasy_Team_Name', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='SkaterTeams_Fantasy_Team_Name', serialize=False, to='fantasy.FantasyTeam')),
            ],
            options={
                'db_table': 'skater_teams',
            },
        ),
        migrations.AddField(
            model_name='nhlplayers',
            name='team_name',
            field=models.ForeignKey(db_column='Team_Name', on_delete=django.db.models.deletion.CASCADE, to='fantasy.NhlTeam'),
        ),
        migrations.AddField(
            model_name='fantasyteam',
            name='fantasy_league_name',
            field=models.ForeignKey(db_column='Fantasy_League_Name', on_delete=django.db.models.deletion.CASCADE, to='fantasy.FantasyLeague'),
        ),
        migrations.AddField(
            model_name='fantasyteam',
            name='username',
            field=models.ForeignKey(db_column='Username', on_delete=django.db.models.deletion.CASCADE, to='fantasy.Owner'),
        ),
        migrations.AddField(
            model_name='skaterteams',
            name='fantasy_league_name',
            field=models.ForeignKey(db_column='Fantasy_League_Name', on_delete=django.db.models.deletion.CASCADE, related_name='SkaterTeams_Fantasy_League_Name', to='fantasy.FantasyTeam'),
        ),
        migrations.AddField(
            model_name='skaterteams',
            name='jersey_number',
            field=models.ForeignKey(db_column='Jersey_Number', on_delete=django.db.models.deletion.CASCADE, related_name='SkaterTeams_Jersey_Number', to='fantasy.NhlSkaters'),
        ),
        migrations.AddField(
            model_name='skaterteams',
            name='team_name',
            field=models.ForeignKey(db_column='Team_Name', on_delete=django.db.models.deletion.CASCADE, related_name='SkaterTeams_Team_Name', to='fantasy.NhlSkaters'),
        ),
        migrations.AddField(
            model_name='nhlskaters',
            name='team_name',
            field=models.ForeignKey(db_column='Team_Name', on_delete=django.db.models.deletion.CASCADE, related_name='NhlSkaters_Team_Name', to='fantasy.NhlPlayers'),
        ),
        migrations.AlterUniqueTogether(
            name='nhlplayers',
            unique_together={('jersey_number', 'team_name')},
        ),
        migrations.AddField(
            model_name='nhlgoalies',
            name='team_name',
            field=models.ForeignKey(db_column='Team_Name', on_delete=django.db.models.deletion.CASCADE, related_name='NhlGoalies_Team_Name', to='fantasy.NhlPlayers'),
        ),
        migrations.AddField(
            model_name='goalieteams',
            name='fantasy_league_name',
            field=models.ForeignKey(db_column='Fantasy_League_Name', on_delete=django.db.models.deletion.CASCADE, related_name='Goalies_Fantasy_League_Name', to='fantasy.FantasyTeam'),
        ),
        migrations.AddField(
            model_name='goalieteams',
            name='jersey_number',
            field=models.ForeignKey(db_column='Jersey_Number', on_delete=django.db.models.deletion.CASCADE, related_name='Goalies_Jersey_Number', to='fantasy.NhlGoalies'),
        ),
        migrations.AddField(
            model_name='goalieteams',
            name='team_name',
            field=models.ForeignKey(db_column='Team_Name', on_delete=django.db.models.deletion.CASCADE, related_name='Goalies_Team_Name', to='fantasy.NhlGoalies'),
        ),
        migrations.AlterUniqueTogether(
            name='fantasyteam',
            unique_together={('fantasy_team_name', 'fantasy_league_name')},
        ),
        migrations.AddField(
            model_name='fantasyleague',
            name='username',
            field=models.ForeignKey(db_column='Username', on_delete=django.db.models.deletion.CASCADE, to='fantasy.LeagueCommisioner'),
        ),
        migrations.AlterUniqueTogether(
            name='skaterteams',
            unique_together={('fantasy_team_name', 'fantasy_league_name', 'jersey_number', 'team_name')},
        ),
        migrations.AlterUniqueTogether(
            name='participates',
            unique_together={('username', 'fantasy_league_name')},
        ),
        migrations.AlterUniqueTogether(
            name='nhlskaters',
            unique_together={('jersey_number', 'team_name')},
        ),
        migrations.AlterUniqueTogether(
            name='nhlgoalies',
            unique_together={('jersey_number', 'team_name')},
        ),
        migrations.AlterUniqueTogether(
            name='goalieteams',
            unique_together={('fantasy_team_name', 'fantasy_league_name', 'jersey_number', 'team_name')},
        ),
    ]
